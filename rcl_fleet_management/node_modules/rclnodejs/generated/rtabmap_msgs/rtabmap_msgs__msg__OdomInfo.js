// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const HeaderWrapper = require('../../generated/std_msgs/std_msgs__msg__Header.js');
const Float64Wrapper = require('../../generated/std_msgs/std_msgs__msg__Float64.js');
const Int32Wrapper = require('../../generated/std_msgs/std_msgs__msg__Int32.js');
const CameraModelsWrapper = require('../../generated/rtabmap_msgs/rtabmap_msgs__msg__CameraModels.js');
const PoseWrapper = require('../../generated/geometry_msgs/geometry_msgs__msg__Pose.js');
const TransformWrapper = require('../../generated/geometry_msgs/geometry_msgs__msg__Transform.js');
const KeyPointWrapper = require('../../generated/rtabmap_msgs/rtabmap_msgs__msg__KeyPoint.js');
const Point3fWrapper = require('../../generated/rtabmap_msgs/rtabmap_msgs__msg__Point3f.js');
const PointCloud2Wrapper = require('../../generated/sensor_msgs/sensor_msgs__msg__PointCloud2.js');
const Point2fWrapper = require('../../generated/rtabmap_msgs/rtabmap_msgs__msg__Point2f.js');
const OdomInfoRefStruct = StructType({
  header: HeaderWrapper.refObjectType,
  lost: primitiveTypes.bool,
  matches: primitiveTypes.int32,
  inliers: primitiveTypes.int32,
  icp_inliers_ratio: primitiveTypes.float32,
  icp_rotation: primitiveTypes.float32,
  icp_translation: primitiveTypes.float32,
  icp_structural_complexity: primitiveTypes.float32,
  icp_structural_distribution: primitiveTypes.float32,
  icp_correspondences: primitiveTypes.int32,
  covariance: ArrayType(primitiveTypes.float64, 36),
  features: primitiveTypes.int32,
  local_map_size: primitiveTypes.int32,
  local_scan_map_size: primitiveTypes.int32,
  local_key_frames: primitiveTypes.int32,
  local_bundle_outliers: primitiveTypes.int32,
  local_bundle_constraints: primitiveTypes.int32,
  local_bundle_time: primitiveTypes.float32,
  key_frame_added: primitiveTypes.bool,
  time_estimation: primitiveTypes.float32,
  time_particle_filtering: primitiveTypes.float32,
  stamp: primitiveTypes.float32,
  interval: primitiveTypes.float32,
  distance_travelled: primitiveTypes.float32,
  memory_usage: primitiveTypes.int32,
  gravity_roll_error: primitiveTypes.float32,
  gravity_pitch_error: primitiveTypes.float32,
  local_bundle_ids: Int32Wrapper.refObjectArrayType,
  local_bundle_models: CameraModelsWrapper.refObjectArrayType,
  local_bundle_poses: PoseWrapper.refObjectArrayType,
  transform: TransformWrapper.refObjectType,
  transform_filtered: TransformWrapper.refObjectType,
  transform_ground_truth: TransformWrapper.refObjectType,
  guess: TransformWrapper.refObjectType,
  type: primitiveTypes.int32,
  words_keys: Int32Wrapper.refObjectArrayType,
  words_values: KeyPointWrapper.refObjectArrayType,
  word_matches: Int32Wrapper.refObjectArrayType,
  word_inliers: Int32Wrapper.refObjectArrayType,
  local_map_keys: Int32Wrapper.refObjectArrayType,
  local_map_values: Point3fWrapper.refObjectArrayType,
  local_scan_map: PointCloud2Wrapper.refObjectType,
  ref_corners: Point2fWrapper.refObjectArrayType,
  new_corners: Point2fWrapper.refObjectArrayType,
  corner_inliers: Int32Wrapper.refObjectArrayType,
});
const OdomInfoRefArray = ArrayType(OdomInfoRefStruct);
const OdomInfoRefStructArray = StructType({
  data: OdomInfoRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class OdomInfoWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new OdomInfoRefStruct(other._refObject.toObject());
      this._wrapperFields.header =  new HeaderWrapper(other._wrapperFields.header);
      this._lostIntialized = true;
      this._matchesIntialized = true;
      this._inliersIntialized = true;
      this._icp_inliers_ratioIntialized = true;
      this._icp_rotationIntialized = true;
      this._icp_translationIntialized = true;
      this._icp_structural_complexityIntialized = true;
      this._icp_structural_distributionIntialized = true;
      this._icp_correspondencesIntialized = true;
      this._wrapperFields.covariance = Float64Wrapper.createArray();
      this._wrapperFields.covariance.copy(other._wrapperFields.covariance);
      this._featuresIntialized = true;
      this._local_map_sizeIntialized = true;
      this._local_scan_map_sizeIntialized = true;
      this._local_key_framesIntialized = true;
      this._local_bundle_outliersIntialized = true;
      this._local_bundle_constraintsIntialized = true;
      this._local_bundle_timeIntialized = true;
      this._key_frame_addedIntialized = true;
      this._time_estimationIntialized = true;
      this._time_particle_filteringIntialized = true;
      this._stampIntialized = true;
      this._intervalIntialized = true;
      this._distance_travelledIntialized = true;
      this._memory_usageIntialized = true;
      this._gravity_roll_errorIntialized = true;
      this._gravity_pitch_errorIntialized = true;
      this._wrapperFields.local_bundle_ids = Int32Wrapper.createArray();
      this._wrapperFields.local_bundle_ids.copy(other._wrapperFields.local_bundle_ids);
      this._wrapperFields.local_bundle_models = CameraModelsWrapper.createArray();
      this._wrapperFields.local_bundle_models.copy(other._wrapperFields.local_bundle_models);
      this._wrapperFields.local_bundle_poses = PoseWrapper.createArray();
      this._wrapperFields.local_bundle_poses.copy(other._wrapperFields.local_bundle_poses);
      this._wrapperFields.transform =  new TransformWrapper(other._wrapperFields.transform);
      this._wrapperFields.transform_filtered =  new TransformWrapper(other._wrapperFields.transform_filtered);
      this._wrapperFields.transform_ground_truth =  new TransformWrapper(other._wrapperFields.transform_ground_truth);
      this._wrapperFields.guess =  new TransformWrapper(other._wrapperFields.guess);
      this._typeIntialized = true;
      this._wrapperFields.words_keys = Int32Wrapper.createArray();
      this._wrapperFields.words_keys.copy(other._wrapperFields.words_keys);
      this._wrapperFields.words_values = KeyPointWrapper.createArray();
      this._wrapperFields.words_values.copy(other._wrapperFields.words_values);
      this._wrapperFields.word_matches = Int32Wrapper.createArray();
      this._wrapperFields.word_matches.copy(other._wrapperFields.word_matches);
      this._wrapperFields.word_inliers = Int32Wrapper.createArray();
      this._wrapperFields.word_inliers.copy(other._wrapperFields.word_inliers);
      this._wrapperFields.local_map_keys = Int32Wrapper.createArray();
      this._wrapperFields.local_map_keys.copy(other._wrapperFields.local_map_keys);
      this._wrapperFields.local_map_values = Point3fWrapper.createArray();
      this._wrapperFields.local_map_values.copy(other._wrapperFields.local_map_values);
      this._wrapperFields.local_scan_map =  new PointCloud2Wrapper(other._wrapperFields.local_scan_map);
      this._wrapperFields.ref_corners = Point2fWrapper.createArray();
      this._wrapperFields.ref_corners.copy(other._wrapperFields.ref_corners);
      this._wrapperFields.new_corners = Point2fWrapper.createArray();
      this._wrapperFields.new_corners.copy(other._wrapperFields.new_corners);
      this._wrapperFields.corner_inliers = Int32Wrapper.createArray();
      this._wrapperFields.corner_inliers.copy(other._wrapperFields.corner_inliers);
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new OdomInfoRefStruct();
    this._wrapperFields.header = new HeaderWrapper();
    this._lostIntialized = false;
    this._matchesIntialized = false;
    this._inliersIntialized = false;
    this._icp_inliers_ratioIntialized = false;
    this._icp_rotationIntialized = false;
    this._icp_translationIntialized = false;
    this._icp_structural_complexityIntialized = false;
    this._icp_structural_distributionIntialized = false;
    this._icp_correspondencesIntialized = false;
    this._wrapperFields.covariance = Float64Wrapper.createArray();
    this._featuresIntialized = false;
    this._local_map_sizeIntialized = false;
    this._local_scan_map_sizeIntialized = false;
    this._local_key_framesIntialized = false;
    this._local_bundle_outliersIntialized = false;
    this._local_bundle_constraintsIntialized = false;
    this._local_bundle_timeIntialized = false;
    this._key_frame_addedIntialized = false;
    this._time_estimationIntialized = false;
    this._time_particle_filteringIntialized = false;
    this._stampIntialized = false;
    this._intervalIntialized = false;
    this._distance_travelledIntialized = false;
    this._memory_usageIntialized = false;
    this._gravity_roll_errorIntialized = false;
    this._gravity_pitch_errorIntialized = false;
    this._wrapperFields.local_bundle_ids = Int32Wrapper.createArray();
    this._wrapperFields.local_bundle_models = CameraModelsWrapper.createArray();
    this._wrapperFields.local_bundle_poses = PoseWrapper.createArray();
    this._wrapperFields.transform = new TransformWrapper();
    this._wrapperFields.transform_filtered = new TransformWrapper();
    this._wrapperFields.transform_ground_truth = new TransformWrapper();
    this._wrapperFields.guess = new TransformWrapper();
    this._typeIntialized = false;
    this._wrapperFields.words_keys = Int32Wrapper.createArray();
    this._wrapperFields.words_values = KeyPointWrapper.createArray();
    this._wrapperFields.word_matches = Int32Wrapper.createArray();
    this._wrapperFields.word_inliers = Int32Wrapper.createArray();
    this._wrapperFields.local_map_keys = Int32Wrapper.createArray();
    this._wrapperFields.local_map_values = Point3fWrapper.createArray();
    this._wrapperFields.local_scan_map = new PointCloud2Wrapper();
    this._wrapperFields.ref_corners = Point2fWrapper.createArray();
    this._wrapperFields.new_corners = Point2fWrapper.createArray();
    this._wrapperFields.corner_inliers = Int32Wrapper.createArray();
  }
  static createFromRefObject(refObject) {
    let self = new OdomInfoWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new OdomInfoArrayWrapper;
  }
  static get ArrayType() {
    return OdomInfoArrayWrapper;
  }
  static get refObjectArrayType() {
    return OdomInfoRefStructArray
  }
  static get refObjectType() {
    return OdomInfoRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._lostIntialized) {
        throw new TypeError('Invalid argument: lost in OdomInfo');
      }
      if (checkConsistency && !this._matchesIntialized) {
        throw new TypeError('Invalid argument: matches in OdomInfo');
      }
      if (checkConsistency && !this._inliersIntialized) {
        throw new TypeError('Invalid argument: inliers in OdomInfo');
      }
      if (checkConsistency && !this._icp_inliers_ratioIntialized) {
        throw new TypeError('Invalid argument: icp_inliers_ratio in OdomInfo');
      }
      if (checkConsistency && !this._icp_rotationIntialized) {
        throw new TypeError('Invalid argument: icp_rotation in OdomInfo');
      }
      if (checkConsistency && !this._icp_translationIntialized) {
        throw new TypeError('Invalid argument: icp_translation in OdomInfo');
      }
      if (checkConsistency && !this._icp_structural_complexityIntialized) {
        throw new TypeError('Invalid argument: icp_structural_complexity in OdomInfo');
      }
      if (checkConsistency && !this._icp_structural_distributionIntialized) {
        throw new TypeError('Invalid argument: icp_structural_distribution in OdomInfo');
      }
      if (checkConsistency && !this._icp_correspondencesIntialized) {
        throw new TypeError('Invalid argument: icp_correspondences in OdomInfo');
      }
      if (checkConsistency && !this._featuresIntialized) {
        throw new TypeError('Invalid argument: features in OdomInfo');
      }
      if (checkConsistency && !this._local_map_sizeIntialized) {
        throw new TypeError('Invalid argument: local_map_size in OdomInfo');
      }
      if (checkConsistency && !this._local_scan_map_sizeIntialized) {
        throw new TypeError('Invalid argument: local_scan_map_size in OdomInfo');
      }
      if (checkConsistency && !this._local_key_framesIntialized) {
        throw new TypeError('Invalid argument: local_key_frames in OdomInfo');
      }
      if (checkConsistency && !this._local_bundle_outliersIntialized) {
        throw new TypeError('Invalid argument: local_bundle_outliers in OdomInfo');
      }
      if (checkConsistency && !this._local_bundle_constraintsIntialized) {
        throw new TypeError('Invalid argument: local_bundle_constraints in OdomInfo');
      }
      if (checkConsistency && !this._local_bundle_timeIntialized) {
        throw new TypeError('Invalid argument: local_bundle_time in OdomInfo');
      }
      if (checkConsistency && !this._key_frame_addedIntialized) {
        throw new TypeError('Invalid argument: key_frame_added in OdomInfo');
      }
      if (checkConsistency && !this._time_estimationIntialized) {
        throw new TypeError('Invalid argument: time_estimation in OdomInfo');
      }
      if (checkConsistency && !this._time_particle_filteringIntialized) {
        throw new TypeError('Invalid argument: time_particle_filtering in OdomInfo');
      }
      if (checkConsistency && !this._stampIntialized) {
        throw new TypeError('Invalid argument: stamp in OdomInfo');
      }
      if (checkConsistency && !this._intervalIntialized) {
        throw new TypeError('Invalid argument: interval in OdomInfo');
      }
      if (checkConsistency && !this._distance_travelledIntialized) {
        throw new TypeError('Invalid argument: distance_travelled in OdomInfo');
      }
      if (checkConsistency && !this._memory_usageIntialized) {
        throw new TypeError('Invalid argument: memory_usage in OdomInfo');
      }
      if (checkConsistency && !this._gravity_roll_errorIntialized) {
        throw new TypeError('Invalid argument: gravity_roll_error in OdomInfo');
      }
      if (checkConsistency && !this._gravity_pitch_errorIntialized) {
        throw new TypeError('Invalid argument: gravity_pitch_error in OdomInfo');
      }
      if (checkConsistency && !this._typeIntialized) {
        throw new TypeError('Invalid argument: type in OdomInfo');
      }
    this._wrapperFields.header.freeze(own, checkConsistency);
    this._refObject.header = this._wrapperFields.header.refObject;
    for (let i = 0; i < this._wrapperFields.covariance.data.length; i++) {
      this._refObject.covariance[i] = this._wrapperFields.covariance.data[i];
    }
    this._wrapperFields.local_bundle_ids.freeze(own, checkConsistency);
    this._refObject.local_bundle_ids = this._wrapperFields.local_bundle_ids.refObject;
    if (own) {
      this._wrapperFields.local_bundle_ids.fill(Int32Array.from([]));
      this._wrapperFields.local_bundle_ids.freeze(own, checkConsistency);
      this._refObject.local_bundle_ids = this._wrapperFields.local_bundle_ids.refObject;
    }
    this._wrapperFields.local_bundle_models.freeze(own, checkConsistency);
    this._refObject.local_bundle_models = this._wrapperFields.local_bundle_models.refObject;
    this._wrapperFields.local_bundle_poses.freeze(own, checkConsistency);
    this._refObject.local_bundle_poses = this._wrapperFields.local_bundle_poses.refObject;
    this._wrapperFields.transform.freeze(own, checkConsistency);
    this._refObject.transform = this._wrapperFields.transform.refObject;
    this._wrapperFields.transform_filtered.freeze(own, checkConsistency);
    this._refObject.transform_filtered = this._wrapperFields.transform_filtered.refObject;
    this._wrapperFields.transform_ground_truth.freeze(own, checkConsistency);
    this._refObject.transform_ground_truth = this._wrapperFields.transform_ground_truth.refObject;
    this._wrapperFields.guess.freeze(own, checkConsistency);
    this._refObject.guess = this._wrapperFields.guess.refObject;
    this._wrapperFields.words_keys.freeze(own, checkConsistency);
    this._refObject.words_keys = this._wrapperFields.words_keys.refObject;
    if (own) {
      this._wrapperFields.words_keys.fill(Int32Array.from([]));
      this._wrapperFields.words_keys.freeze(own, checkConsistency);
      this._refObject.words_keys = this._wrapperFields.words_keys.refObject;
    }
    this._wrapperFields.words_values.freeze(own, checkConsistency);
    this._refObject.words_values = this._wrapperFields.words_values.refObject;
    this._wrapperFields.word_matches.freeze(own, checkConsistency);
    this._refObject.word_matches = this._wrapperFields.word_matches.refObject;
    if (own) {
      this._wrapperFields.word_matches.fill(Int32Array.from([]));
      this._wrapperFields.word_matches.freeze(own, checkConsistency);
      this._refObject.word_matches = this._wrapperFields.word_matches.refObject;
    }
    this._wrapperFields.word_inliers.freeze(own, checkConsistency);
    this._refObject.word_inliers = this._wrapperFields.word_inliers.refObject;
    if (own) {
      this._wrapperFields.word_inliers.fill(Int32Array.from([]));
      this._wrapperFields.word_inliers.freeze(own, checkConsistency);
      this._refObject.word_inliers = this._wrapperFields.word_inliers.refObject;
    }
    this._wrapperFields.local_map_keys.freeze(own, checkConsistency);
    this._refObject.local_map_keys = this._wrapperFields.local_map_keys.refObject;
    if (own) {
      this._wrapperFields.local_map_keys.fill(Int32Array.from([]));
      this._wrapperFields.local_map_keys.freeze(own, checkConsistency);
      this._refObject.local_map_keys = this._wrapperFields.local_map_keys.refObject;
    }
    this._wrapperFields.local_map_values.freeze(own, checkConsistency);
    this._refObject.local_map_values = this._wrapperFields.local_map_values.refObject;
    this._wrapperFields.local_scan_map.freeze(own, checkConsistency);
    this._refObject.local_scan_map = this._wrapperFields.local_scan_map.refObject;
    this._wrapperFields.ref_corners.freeze(own, checkConsistency);
    this._refObject.ref_corners = this._wrapperFields.ref_corners.refObject;
    this._wrapperFields.new_corners.freeze(own, checkConsistency);
    this._refObject.new_corners = this._wrapperFields.new_corners.refObject;
    this._wrapperFields.corner_inliers.freeze(own, checkConsistency);
    this._refObject.corner_inliers = this._wrapperFields.corner_inliers.refObject;
    if (own) {
      this._wrapperFields.corner_inliers.fill(Int32Array.from([]));
      this._wrapperFields.corner_inliers.freeze(own, checkConsistency);
      this._refObject.corner_inliers = this._wrapperFields.corner_inliers.refObject;
    }
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._wrapperFields.header.copyRefObject(refObject.header);
    this._lostIntialized = true;
    this._refObject.lost = refObject.lost;
    this._matchesIntialized = true;
    this._refObject.matches = refObject.matches;
    this._inliersIntialized = true;
    this._refObject.inliers = refObject.inliers;
    this._icp_inliers_ratioIntialized = true;
    this._refObject.icp_inliers_ratio = refObject.icp_inliers_ratio;
    this._icp_rotationIntialized = true;
    this._refObject.icp_rotation = refObject.icp_rotation;
    this._icp_translationIntialized = true;
    this._refObject.icp_translation = refObject.icp_translation;
    this._icp_structural_complexityIntialized = true;
    this._refObject.icp_structural_complexity = refObject.icp_structural_complexity;
    this._icp_structural_distributionIntialized = true;
    this._refObject.icp_structural_distribution = refObject.icp_structural_distribution;
    this._icp_correspondencesIntialized = true;
    this._refObject.icp_correspondences = refObject.icp_correspondences;
    this._refObject.covariance = refObject.covariance;
    this._wrapperFields.covariance.fill(refObject.covariance.toArray());
    this._featuresIntialized = true;
    this._refObject.features = refObject.features;
    this._local_map_sizeIntialized = true;
    this._refObject.local_map_size = refObject.local_map_size;
    this._local_scan_map_sizeIntialized = true;
    this._refObject.local_scan_map_size = refObject.local_scan_map_size;
    this._local_key_framesIntialized = true;
    this._refObject.local_key_frames = refObject.local_key_frames;
    this._local_bundle_outliersIntialized = true;
    this._refObject.local_bundle_outliers = refObject.local_bundle_outliers;
    this._local_bundle_constraintsIntialized = true;
    this._refObject.local_bundle_constraints = refObject.local_bundle_constraints;
    this._local_bundle_timeIntialized = true;
    this._refObject.local_bundle_time = refObject.local_bundle_time;
    this._key_frame_addedIntialized = true;
    this._refObject.key_frame_added = refObject.key_frame_added;
    this._time_estimationIntialized = true;
    this._refObject.time_estimation = refObject.time_estimation;
    this._time_particle_filteringIntialized = true;
    this._refObject.time_particle_filtering = refObject.time_particle_filtering;
    this._stampIntialized = true;
    this._refObject.stamp = refObject.stamp;
    this._intervalIntialized = true;
    this._refObject.interval = refObject.interval;
    this._distance_travelledIntialized = true;
    this._refObject.distance_travelled = refObject.distance_travelled;
    this._memory_usageIntialized = true;
    this._refObject.memory_usage = refObject.memory_usage;
    this._gravity_roll_errorIntialized = true;
    this._refObject.gravity_roll_error = refObject.gravity_roll_error;
    this._gravity_pitch_errorIntialized = true;
    this._refObject.gravity_pitch_error = refObject.gravity_pitch_error;
    this._wrapperFields.local_bundle_ids.copyRefObject(refObject.local_bundle_ids);
    this._wrapperFields.local_bundle_models.copyRefObject(refObject.local_bundle_models);
    this._wrapperFields.local_bundle_poses.copyRefObject(refObject.local_bundle_poses);
    this._wrapperFields.transform.copyRefObject(refObject.transform);
    this._wrapperFields.transform_filtered.copyRefObject(refObject.transform_filtered);
    this._wrapperFields.transform_ground_truth.copyRefObject(refObject.transform_ground_truth);
    this._wrapperFields.guess.copyRefObject(refObject.guess);
    this._typeIntialized = true;
    this._refObject.type = refObject.type;
    this._wrapperFields.words_keys.copyRefObject(refObject.words_keys);
    this._wrapperFields.words_values.copyRefObject(refObject.words_values);
    this._wrapperFields.word_matches.copyRefObject(refObject.word_matches);
    this._wrapperFields.word_inliers.copyRefObject(refObject.word_inliers);
    this._wrapperFields.local_map_keys.copyRefObject(refObject.local_map_keys);
    this._wrapperFields.local_map_values.copyRefObject(refObject.local_map_values);
    this._wrapperFields.local_scan_map.copyRefObject(refObject.local_scan_map);
    this._wrapperFields.ref_corners.copyRefObject(refObject.ref_corners);
    this._wrapperFields.new_corners.copyRefObject(refObject.new_corners);
    this._wrapperFields.corner_inliers.copyRefObject(refObject.corner_inliers);
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
    HeaderWrapper.freeStruct(refObject.header);
    if (refObject.local_bundle_ids.size != 0) {
      Int32Wrapper.ArrayType.freeArray(refObject.local_bundle_ids);
      if (Int32Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.local_bundle_ids, Int32Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.local_bundle_models.size != 0) {
      CameraModelsWrapper.ArrayType.freeArray(refObject.local_bundle_models);
      if (CameraModelsWrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.local_bundle_models, CameraModelsWrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.local_bundle_poses.size != 0) {
      PoseWrapper.ArrayType.freeArray(refObject.local_bundle_poses);
      if (PoseWrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.local_bundle_poses, PoseWrapper.refObjectArrayType, 'data');
      }
    }
    TransformWrapper.freeStruct(refObject.transform);
    TransformWrapper.freeStruct(refObject.transform_filtered);
    TransformWrapper.freeStruct(refObject.transform_ground_truth);
    TransformWrapper.freeStruct(refObject.guess);
    if (refObject.words_keys.size != 0) {
      Int32Wrapper.ArrayType.freeArray(refObject.words_keys);
      if (Int32Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.words_keys, Int32Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.words_values.size != 0) {
      KeyPointWrapper.ArrayType.freeArray(refObject.words_values);
      if (KeyPointWrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.words_values, KeyPointWrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.word_matches.size != 0) {
      Int32Wrapper.ArrayType.freeArray(refObject.word_matches);
      if (Int32Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.word_matches, Int32Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.word_inliers.size != 0) {
      Int32Wrapper.ArrayType.freeArray(refObject.word_inliers);
      if (Int32Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.word_inliers, Int32Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.local_map_keys.size != 0) {
      Int32Wrapper.ArrayType.freeArray(refObject.local_map_keys);
      if (Int32Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.local_map_keys, Int32Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.local_map_values.size != 0) {
      Point3fWrapper.ArrayType.freeArray(refObject.local_map_values);
      if (Point3fWrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.local_map_values, Point3fWrapper.refObjectArrayType, 'data');
      }
    }
    PointCloud2Wrapper.freeStruct(refObject.local_scan_map);
    if (refObject.ref_corners.size != 0) {
      Point2fWrapper.ArrayType.freeArray(refObject.ref_corners);
      if (Point2fWrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.ref_corners, Point2fWrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.new_corners.size != 0) {
      Point2fWrapper.ArrayType.freeArray(refObject.new_corners);
      if (Point2fWrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.new_corners, Point2fWrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.corner_inliers.size != 0) {
      Int32Wrapper.ArrayType.freeArray(refObject.corner_inliers);
      if (Int32Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.corner_inliers, Int32Wrapper.refObjectArrayType, 'data');
      }
    }
  }
  static destoryRawROS(msg) {
    OdomInfoWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'rtabmap_msgs', subFolder: 'msg', interfaceName: 'OdomInfo'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get header() {
    return this._wrapperFields.header;
  }
  set header(value) {
    if (value instanceof HeaderWrapper) {
      this._wrapperFields.header.copy(value);
    } else {
      this._wrapperFields.header.copy(new HeaderWrapper(value));
    }
  }
  get lost() {
    if (!this._lostIntialized) {
      return undefined;
    }
    return this._refObject.lost;
  }
  set lost(value) {
    this._lostIntialized = true;
    this._refObject.lost = value;
  }
  get matches() {
    if (!this._matchesIntialized) {
      return undefined;
    }
    return this._refObject.matches;
  }
  set matches(value) {
    this._matchesIntialized = true;
    this._refObject.matches = value;
  }
  get inliers() {
    if (!this._inliersIntialized) {
      return undefined;
    }
    return this._refObject.inliers;
  }
  set inliers(value) {
    this._inliersIntialized = true;
    this._refObject.inliers = value;
  }
  get icp_inliers_ratio() {
    if (!this._icp_inliers_ratioIntialized) {
      return undefined;
    }
    return this._refObject.icp_inliers_ratio;
  }
  set icp_inliers_ratio(value) {
    this._icp_inliers_ratioIntialized = true;
    this._refObject.icp_inliers_ratio = value;
  }
  get icp_rotation() {
    if (!this._icp_rotationIntialized) {
      return undefined;
    }
    return this._refObject.icp_rotation;
  }
  set icp_rotation(value) {
    this._icp_rotationIntialized = true;
    this._refObject.icp_rotation = value;
  }
  get icp_translation() {
    if (!this._icp_translationIntialized) {
      return undefined;
    }
    return this._refObject.icp_translation;
  }
  set icp_translation(value) {
    this._icp_translationIntialized = true;
    this._refObject.icp_translation = value;
  }
  get icp_structural_complexity() {
    if (!this._icp_structural_complexityIntialized) {
      return undefined;
    }
    return this._refObject.icp_structural_complexity;
  }
  set icp_structural_complexity(value) {
    this._icp_structural_complexityIntialized = true;
    this._refObject.icp_structural_complexity = value;
  }
  get icp_structural_distribution() {
    if (!this._icp_structural_distributionIntialized) {
      return undefined;
    }
    return this._refObject.icp_structural_distribution;
  }
  set icp_structural_distribution(value) {
    this._icp_structural_distributionIntialized = true;
    this._refObject.icp_structural_distribution = value;
  }
  get icp_correspondences() {
    if (!this._icp_correspondencesIntialized) {
      return undefined;
    }
    return this._refObject.icp_correspondences;
  }
  set icp_correspondences(value) {
    this._icp_correspondencesIntialized = true;
    this._refObject.icp_correspondences = value;
  }
  get covariance() {
    return this._wrapperFields['covariance'].data;
  }
  set covariance(value) {
    if (value.length !== 36) {
      throw new RangeError('The length of the array must be 36.');
    }
    this._wrapperFields['covariance'].fill(value);
  }
  get features() {
    if (!this._featuresIntialized) {
      return undefined;
    }
    return this._refObject.features;
  }
  set features(value) {
    this._featuresIntialized = true;
    this._refObject.features = value;
  }
  get local_map_size() {
    if (!this._local_map_sizeIntialized) {
      return undefined;
    }
    return this._refObject.local_map_size;
  }
  set local_map_size(value) {
    this._local_map_sizeIntialized = true;
    this._refObject.local_map_size = value;
  }
  get local_scan_map_size() {
    if (!this._local_scan_map_sizeIntialized) {
      return undefined;
    }
    return this._refObject.local_scan_map_size;
  }
  set local_scan_map_size(value) {
    this._local_scan_map_sizeIntialized = true;
    this._refObject.local_scan_map_size = value;
  }
  get local_key_frames() {
    if (!this._local_key_framesIntialized) {
      return undefined;
    }
    return this._refObject.local_key_frames;
  }
  set local_key_frames(value) {
    this._local_key_framesIntialized = true;
    this._refObject.local_key_frames = value;
  }
  get local_bundle_outliers() {
    if (!this._local_bundle_outliersIntialized) {
      return undefined;
    }
    return this._refObject.local_bundle_outliers;
  }
  set local_bundle_outliers(value) {
    this._local_bundle_outliersIntialized = true;
    this._refObject.local_bundle_outliers = value;
  }
  get local_bundle_constraints() {
    if (!this._local_bundle_constraintsIntialized) {
      return undefined;
    }
    return this._refObject.local_bundle_constraints;
  }
  set local_bundle_constraints(value) {
    this._local_bundle_constraintsIntialized = true;
    this._refObject.local_bundle_constraints = value;
  }
  get local_bundle_time() {
    if (!this._local_bundle_timeIntialized) {
      return undefined;
    }
    return this._refObject.local_bundle_time;
  }
  set local_bundle_time(value) {
    this._local_bundle_timeIntialized = true;
    this._refObject.local_bundle_time = value;
  }
  get key_frame_added() {
    if (!this._key_frame_addedIntialized) {
      return undefined;
    }
    return this._refObject.key_frame_added;
  }
  set key_frame_added(value) {
    this._key_frame_addedIntialized = true;
    this._refObject.key_frame_added = value;
  }
  get time_estimation() {
    if (!this._time_estimationIntialized) {
      return undefined;
    }
    return this._refObject.time_estimation;
  }
  set time_estimation(value) {
    this._time_estimationIntialized = true;
    this._refObject.time_estimation = value;
  }
  get time_particle_filtering() {
    if (!this._time_particle_filteringIntialized) {
      return undefined;
    }
    return this._refObject.time_particle_filtering;
  }
  set time_particle_filtering(value) {
    this._time_particle_filteringIntialized = true;
    this._refObject.time_particle_filtering = value;
  }
  get stamp() {
    if (!this._stampIntialized) {
      return undefined;
    }
    return this._refObject.stamp;
  }
  set stamp(value) {
    this._stampIntialized = true;
    this._refObject.stamp = value;
  }
  get interval() {
    if (!this._intervalIntialized) {
      return undefined;
    }
    return this._refObject.interval;
  }
  set interval(value) {
    this._intervalIntialized = true;
    this._refObject.interval = value;
  }
  get distance_travelled() {
    if (!this._distance_travelledIntialized) {
      return undefined;
    }
    return this._refObject.distance_travelled;
  }
  set distance_travelled(value) {
    this._distance_travelledIntialized = true;
    this._refObject.distance_travelled = value;
  }
  get memory_usage() {
    if (!this._memory_usageIntialized) {
      return undefined;
    }
    return this._refObject.memory_usage;
  }
  set memory_usage(value) {
    this._memory_usageIntialized = true;
    this._refObject.memory_usage = value;
  }
  get gravity_roll_error() {
    if (!this._gravity_roll_errorIntialized) {
      return undefined;
    }
    return this._refObject.gravity_roll_error;
  }
  set gravity_roll_error(value) {
    this._gravity_roll_errorIntialized = true;
    this._refObject.gravity_roll_error = value;
  }
  get gravity_pitch_error() {
    if (!this._gravity_pitch_errorIntialized) {
      return undefined;
    }
    return this._refObject.gravity_pitch_error;
  }
  set gravity_pitch_error(value) {
    this._gravity_pitch_errorIntialized = true;
    this._refObject.gravity_pitch_error = value;
  }
  get local_bundle_ids() {
    return this._wrapperFields['local_bundle_ids'].data;
  }
  set local_bundle_ids(value) {
    this._wrapperFields['local_bundle_ids'].fill(value);
  }
  get local_bundle_models() {
    return this._wrapperFields.local_bundle_models;
  }
  set local_bundle_models(value) {
    this._wrapperFields.local_bundle_models.fill(value);
  }
  get local_bundle_poses() {
    return this._wrapperFields.local_bundle_poses;
  }
  set local_bundle_poses(value) {
    this._wrapperFields.local_bundle_poses.fill(value);
  }
  get transform() {
    return this._wrapperFields.transform;
  }
  set transform(value) {
    if (value instanceof TransformWrapper) {
      this._wrapperFields.transform.copy(value);
    } else {
      this._wrapperFields.transform.copy(new TransformWrapper(value));
    }
  }
  get transform_filtered() {
    return this._wrapperFields.transform_filtered;
  }
  set transform_filtered(value) {
    if (value instanceof TransformWrapper) {
      this._wrapperFields.transform_filtered.copy(value);
    } else {
      this._wrapperFields.transform_filtered.copy(new TransformWrapper(value));
    }
  }
  get transform_ground_truth() {
    return this._wrapperFields.transform_ground_truth;
  }
  set transform_ground_truth(value) {
    if (value instanceof TransformWrapper) {
      this._wrapperFields.transform_ground_truth.copy(value);
    } else {
      this._wrapperFields.transform_ground_truth.copy(new TransformWrapper(value));
    }
  }
  get guess() {
    return this._wrapperFields.guess;
  }
  set guess(value) {
    if (value instanceof TransformWrapper) {
      this._wrapperFields.guess.copy(value);
    } else {
      this._wrapperFields.guess.copy(new TransformWrapper(value));
    }
  }
  get type() {
    if (!this._typeIntialized) {
      return undefined;
    }
    return this._refObject.type;
  }
  set type(value) {
    this._typeIntialized = true;
    this._refObject.type = value;
  }
  get words_keys() {
    return this._wrapperFields['words_keys'].data;
  }
  set words_keys(value) {
    this._wrapperFields['words_keys'].fill(value);
  }
  get words_values() {
    return this._wrapperFields.words_values;
  }
  set words_values(value) {
    this._wrapperFields.words_values.fill(value);
  }
  get word_matches() {
    return this._wrapperFields['word_matches'].data;
  }
  set word_matches(value) {
    this._wrapperFields['word_matches'].fill(value);
  }
  get word_inliers() {
    return this._wrapperFields['word_inliers'].data;
  }
  set word_inliers(value) {
    this._wrapperFields['word_inliers'].fill(value);
  }
  get local_map_keys() {
    return this._wrapperFields['local_map_keys'].data;
  }
  set local_map_keys(value) {
    this._wrapperFields['local_map_keys'].fill(value);
  }
  get local_map_values() {
    return this._wrapperFields.local_map_values;
  }
  set local_map_values(value) {
    this._wrapperFields.local_map_values.fill(value);
  }
  get local_scan_map() {
    return this._wrapperFields.local_scan_map;
  }
  set local_scan_map(value) {
    if (value instanceof PointCloud2Wrapper) {
      this._wrapperFields.local_scan_map.copy(value);
    } else {
      this._wrapperFields.local_scan_map.copy(new PointCloud2Wrapper(value));
    }
  }
  get ref_corners() {
    return this._wrapperFields.ref_corners;
  }
  set ref_corners(value) {
    this._wrapperFields.ref_corners.fill(value);
  }
  get new_corners() {
    return this._wrapperFields.new_corners;
  }
  set new_corners(value) {
    this._wrapperFields.new_corners.fill(value);
  }
  get corner_inliers() {
    return this._wrapperFields['corner_inliers'].data;
  }
  set corner_inliers(value) {
    this._wrapperFields['corner_inliers'].fill(value);
  }
  copyRefObject(refObject) {
    this._refObject = new OdomInfoRefStruct(refObject.toObject());
    this._wrapperFields.header.copyRefObject(this._refObject.header);
    this._lostIntialized = true;
    this._matchesIntialized = true;
    this._inliersIntialized = true;
    this._icp_inliers_ratioIntialized = true;
    this._icp_rotationIntialized = true;
    this._icp_translationIntialized = true;
    this._icp_structural_complexityIntialized = true;
    this._icp_structural_distributionIntialized = true;
    this._icp_correspondencesIntialized = true;
    this._wrapperFields.covariance.fill(refObject.covariance.toArray());
    this._featuresIntialized = true;
    this._local_map_sizeIntialized = true;
    this._local_scan_map_sizeIntialized = true;
    this._local_key_framesIntialized = true;
    this._local_bundle_outliersIntialized = true;
    this._local_bundle_constraintsIntialized = true;
    this._local_bundle_timeIntialized = true;
    this._key_frame_addedIntialized = true;
    this._time_estimationIntialized = true;
    this._time_particle_filteringIntialized = true;
    this._stampIntialized = true;
    this._intervalIntialized = true;
    this._distance_travelledIntialized = true;
    this._memory_usageIntialized = true;
    this._gravity_roll_errorIntialized = true;
    this._gravity_pitch_errorIntialized = true;
    this._wrapperFields.local_bundle_ids.copyRefObject(this._refObject.local_bundle_ids);
    this._wrapperFields.local_bundle_models.copyRefObject(this._refObject.local_bundle_models);
    this._wrapperFields.local_bundle_poses.copyRefObject(this._refObject.local_bundle_poses);
    this._wrapperFields.transform.copyRefObject(this._refObject.transform);
    this._wrapperFields.transform_filtered.copyRefObject(this._refObject.transform_filtered);
    this._wrapperFields.transform_ground_truth.copyRefObject(this._refObject.transform_ground_truth);
    this._wrapperFields.guess.copyRefObject(this._refObject.guess);
    this._typeIntialized = true;
    this._wrapperFields.words_keys.copyRefObject(this._refObject.words_keys);
    this._wrapperFields.words_values.copyRefObject(this._refObject.words_values);
    this._wrapperFields.word_matches.copyRefObject(this._refObject.word_matches);
    this._wrapperFields.word_inliers.copyRefObject(this._refObject.word_inliers);
    this._wrapperFields.local_map_keys.copyRefObject(this._refObject.local_map_keys);
    this._wrapperFields.local_map_values.copyRefObject(this._refObject.local_map_values);
    this._wrapperFields.local_scan_map.copyRefObject(this._refObject.local_scan_map);
    this._wrapperFields.ref_corners.copyRefObject(this._refObject.ref_corners);
    this._wrapperFields.new_corners.copyRefObject(this._refObject.new_corners);
    this._wrapperFields.corner_inliers.copyRefObject(this._refObject.corner_inliers);
  }
  copy(other) {
    this._refObject = new OdomInfoRefStruct(other._refObject.toObject());
    this._wrapperFields.header.copy(other._wrapperFields.header);
    this._lostIntialized = true;
    this._matchesIntialized = true;
    this._inliersIntialized = true;
    this._icp_inliers_ratioIntialized = true;
    this._icp_rotationIntialized = true;
    this._icp_translationIntialized = true;
    this._icp_structural_complexityIntialized = true;
    this._icp_structural_distributionIntialized = true;
    this._icp_correspondencesIntialized = true;
    this._wrapperFields.covariance.copy(other._wrapperFields.covariance);
    this._featuresIntialized = true;
    this._local_map_sizeIntialized = true;
    this._local_scan_map_sizeIntialized = true;
    this._local_key_framesIntialized = true;
    this._local_bundle_outliersIntialized = true;
    this._local_bundle_constraintsIntialized = true;
    this._local_bundle_timeIntialized = true;
    this._key_frame_addedIntialized = true;
    this._time_estimationIntialized = true;
    this._time_particle_filteringIntialized = true;
    this._stampIntialized = true;
    this._intervalIntialized = true;
    this._distance_travelledIntialized = true;
    this._memory_usageIntialized = true;
    this._gravity_roll_errorIntialized = true;
    this._gravity_pitch_errorIntialized = true;
    this._wrapperFields.local_bundle_ids.copy(other._wrapperFields.local_bundle_ids);
    this._wrapperFields.local_bundle_models.copy(other._wrapperFields.local_bundle_models);
    this._wrapperFields.local_bundle_poses.copy(other._wrapperFields.local_bundle_poses);
    this._wrapperFields.transform.copy(other._wrapperFields.transform);
    this._wrapperFields.transform_filtered.copy(other._wrapperFields.transform_filtered);
    this._wrapperFields.transform_ground_truth.copy(other._wrapperFields.transform_ground_truth);
    this._wrapperFields.guess.copy(other._wrapperFields.guess);
    this._typeIntialized = true;
    this._wrapperFields.words_keys.copy(other._wrapperFields.words_keys);
    this._wrapperFields.words_values.copy(other._wrapperFields.words_values);
    this._wrapperFields.word_matches.copy(other._wrapperFields.word_matches);
    this._wrapperFields.word_inliers.copy(other._wrapperFields.word_inliers);
    this._wrapperFields.local_map_keys.copy(other._wrapperFields.local_map_keys);
    this._wrapperFields.local_map_values.copy(other._wrapperFields.local_map_values);
    this._wrapperFields.local_scan_map.copy(other._wrapperFields.local_scan_map);
    this._wrapperFields.ref_corners.copy(other._wrapperFields.ref_corners);
    this._wrapperFields.new_corners.copy(other._wrapperFields.new_corners);
    this._wrapperFields.corner_inliers.copy(other._wrapperFields.corner_inliers);
  }
  static get classType() {
    return OdomInfoWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[],"fields":[{"name":"header","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"std_msgs","type":"Header","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"lost","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"matches","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"inliers","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"icp_inliers_ratio","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"icp_rotation","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"icp_translation","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"icp_structural_complexity","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"icp_structural_distribution","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"icp_correspondences","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"covariance","type":{"isArray":true,"arraySize":36,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"features","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"local_map_size","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"local_scan_map_size","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"local_key_frames","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"local_bundle_outliers","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"local_bundle_constraints","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"local_bundle_time","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"key_frame_added","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"time_estimation","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"time_particle_filtering","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"stamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"interval","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"distance_travelled","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"memory_usage","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"gravity_roll_error","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"gravity_pitch_error","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"local_bundle_ids","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"local_bundle_models","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":"rtabmap_msgs","type":"CameraModels","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"local_bundle_poses","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":"geometry_msgs","type":"Pose","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"transform","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"geometry_msgs","type":"Transform","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"transform_filtered","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"geometry_msgs","type":"Transform","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"transform_ground_truth","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"geometry_msgs","type":"Transform","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"guess","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"geometry_msgs","type":"Transform","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"type","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"words_keys","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"words_values","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":"rtabmap_msgs","type":"KeyPoint","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"word_matches","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"word_inliers","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"local_map_keys","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"local_map_values","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":"rtabmap_msgs","type":"Point3f","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"local_scan_map","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"sensor_msgs","type":"PointCloud2","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"ref_corners","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":"rtabmap_msgs","type":"Point2f","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"new_corners","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":"rtabmap_msgs","type":"Point2f","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"corner_inliers","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"rtabmap_msgs","type":"OdomInfo","stringUpperBound":null,"isPrimitiveType":false},"msgName":"OdomInfo"};
  }
  hasMember(name) {
    let memberNames = ["header","lost","matches","inliers","icp_inliers_ratio","icp_rotation","icp_translation","icp_structural_complexity","icp_structural_distribution","icp_correspondences","covariance","features","local_map_size","local_scan_map_size","local_key_frames","local_bundle_outliers","local_bundle_constraints","local_bundle_time","key_frame_added","time_estimation","time_particle_filtering","stamp","interval","distance_travelled","memory_usage","gravity_roll_error","gravity_pitch_error","local_bundle_ids","local_bundle_models","local_bundle_poses","transform","transform_filtered","transform_ground_truth","guess","type","words_keys","words_values","word_matches","word_inliers","local_map_keys","local_map_values","local_scan_map","ref_corners","new_corners","corner_inliers"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class OdomInfoArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof OdomInfoWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new OdomInfoWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to OdomInfoArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to OdomInfoArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new OdomInfoRefArray(size);
    this._refObject = new OdomInfoRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new OdomInfoWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof OdomInfoArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "OdomInfoArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      OdomInfoWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return OdomInfoWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return OdomInfoArrayWrapper;
  }
}
module.exports = OdomInfoWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [],
  "fields": [
    {
      "name": "header",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "std_msgs",
        "type": "Header",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "lost",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "matches",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "inliers",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "icp_inliers_ratio",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "icp_rotation",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "icp_translation",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "icp_structural_complexity",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "icp_structural_distribution",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "icp_correspondences",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "covariance",
      "type": {
        "isArray": true,
        "arraySize": 36,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "features",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "local_map_size",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "local_scan_map_size",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "local_key_frames",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "local_bundle_outliers",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "local_bundle_constraints",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "local_bundle_time",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "key_frame_added",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "time_estimation",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "time_particle_filtering",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "stamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "interval",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "distance_travelled",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "memory_usage",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "gravity_roll_error",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "gravity_pitch_error",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "local_bundle_ids",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "local_bundle_models",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": "rtabmap_msgs",
        "type": "CameraModels",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "local_bundle_poses",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": "geometry_msgs",
        "type": "Pose",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "transform",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "geometry_msgs",
        "type": "Transform",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "transform_filtered",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "geometry_msgs",
        "type": "Transform",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "transform_ground_truth",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "geometry_msgs",
        "type": "Transform",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "guess",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "geometry_msgs",
        "type": "Transform",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "type",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "words_keys",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "words_values",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": "rtabmap_msgs",
        "type": "KeyPoint",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "word_matches",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "word_inliers",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "local_map_keys",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "local_map_values",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": "rtabmap_msgs",
        "type": "Point3f",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "local_scan_map",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "sensor_msgs",
        "type": "PointCloud2",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "ref_corners",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": "rtabmap_msgs",
        "type": "Point2f",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "new_corners",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": "rtabmap_msgs",
        "type": "Point2f",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "corner_inliers",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "rtabmap_msgs",
    "type": "OdomInfo",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "OdomInfo"
}
*/
