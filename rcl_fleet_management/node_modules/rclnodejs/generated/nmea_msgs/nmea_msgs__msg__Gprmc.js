// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const HeaderWrapper = require('../../generated/std_msgs/std_msgs__msg__Header.js');
const StringWrapper = require('../../generated/std_msgs/std_msgs__msg__String.js');
const GprmcRefStruct = StructType({
  header: HeaderWrapper.refObjectType,
  message_id: primitiveTypes.string,
  utc_seconds: primitiveTypes.float64,
  position_status: primitiveTypes.string,
  lat: primitiveTypes.float64,
  lon: primitiveTypes.float64,
  lat_dir: primitiveTypes.string,
  lon_dir: primitiveTypes.string,
  speed: primitiveTypes.float32,
  track: primitiveTypes.float32,
  date: primitiveTypes.string,
  mag_var: primitiveTypes.float32,
  mag_var_direction: primitiveTypes.string,
  mode_indicator: primitiveTypes.string,
});
const GprmcRefArray = ArrayType(GprmcRefStruct);
const GprmcRefStructArray = StructType({
  data: GprmcRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class GprmcWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new GprmcRefStruct(other._refObject.toObject());
      this._wrapperFields.header =  new HeaderWrapper(other._wrapperFields.header);
      this._message_idIntialized = true;
      this._wrapperFields.message_id =  new StringWrapper(other._wrapperFields.message_id);
      this._utc_secondsIntialized = true;
      this._position_statusIntialized = true;
      this._wrapperFields.position_status =  new StringWrapper(other._wrapperFields.position_status);
      this._latIntialized = true;
      this._lonIntialized = true;
      this._lat_dirIntialized = true;
      this._wrapperFields.lat_dir =  new StringWrapper(other._wrapperFields.lat_dir);
      this._lon_dirIntialized = true;
      this._wrapperFields.lon_dir =  new StringWrapper(other._wrapperFields.lon_dir);
      this._speedIntialized = true;
      this._trackIntialized = true;
      this._dateIntialized = true;
      this._wrapperFields.date =  new StringWrapper(other._wrapperFields.date);
      this._mag_varIntialized = true;
      this._mag_var_directionIntialized = true;
      this._wrapperFields.mag_var_direction =  new StringWrapper(other._wrapperFields.mag_var_direction);
      this._mode_indicatorIntialized = true;
      this._wrapperFields.mode_indicator =  new StringWrapper(other._wrapperFields.mode_indicator);
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new GprmcRefStruct();
    this._wrapperFields.header = new HeaderWrapper();
    this._message_idIntialized = false;
    this._wrapperFields.message_id = new StringWrapper();
    this._utc_secondsIntialized = false;
    this._position_statusIntialized = false;
    this._wrapperFields.position_status = new StringWrapper();
    this._latIntialized = false;
    this._lonIntialized = false;
    this._lat_dirIntialized = false;
    this._wrapperFields.lat_dir = new StringWrapper();
    this._lon_dirIntialized = false;
    this._wrapperFields.lon_dir = new StringWrapper();
    this._speedIntialized = false;
    this._trackIntialized = false;
    this._dateIntialized = false;
    this._wrapperFields.date = new StringWrapper();
    this._mag_varIntialized = false;
    this._mag_var_directionIntialized = false;
    this._wrapperFields.mag_var_direction = new StringWrapper();
    this._mode_indicatorIntialized = false;
    this._wrapperFields.mode_indicator = new StringWrapper();
  }
  static createFromRefObject(refObject) {
    let self = new GprmcWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new GprmcArrayWrapper;
  }
  static get ArrayType() {
    return GprmcArrayWrapper;
  }
  static get refObjectArrayType() {
    return GprmcRefStructArray
  }
  static get refObjectType() {
    return GprmcRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._message_idIntialized) {
        throw new TypeError('Invalid argument: message_id in Gprmc');
      }
      if (checkConsistency && !this._utc_secondsIntialized) {
        throw new TypeError('Invalid argument: utc_seconds in Gprmc');
      }
      if (checkConsistency && !this._position_statusIntialized) {
        throw new TypeError('Invalid argument: position_status in Gprmc');
      }
      if (checkConsistency && !this._latIntialized) {
        throw new TypeError('Invalid argument: lat in Gprmc');
      }
      if (checkConsistency && !this._lonIntialized) {
        throw new TypeError('Invalid argument: lon in Gprmc');
      }
      if (checkConsistency && !this._lat_dirIntialized) {
        throw new TypeError('Invalid argument: lat_dir in Gprmc');
      }
      if (checkConsistency && !this._lon_dirIntialized) {
        throw new TypeError('Invalid argument: lon_dir in Gprmc');
      }
      if (checkConsistency && !this._speedIntialized) {
        throw new TypeError('Invalid argument: speed in Gprmc');
      }
      if (checkConsistency && !this._trackIntialized) {
        throw new TypeError('Invalid argument: track in Gprmc');
      }
      if (checkConsistency && !this._dateIntialized) {
        throw new TypeError('Invalid argument: date in Gprmc');
      }
      if (checkConsistency && !this._mag_varIntialized) {
        throw new TypeError('Invalid argument: mag_var in Gprmc');
      }
      if (checkConsistency && !this._mag_var_directionIntialized) {
        throw new TypeError('Invalid argument: mag_var_direction in Gprmc');
      }
      if (checkConsistency && !this._mode_indicatorIntialized) {
        throw new TypeError('Invalid argument: mode_indicator in Gprmc');
      }
    this._wrapperFields.header.freeze(own, checkConsistency);
    this._refObject.header = this._wrapperFields.header.refObject;
    if (own) {
      this._wrapperFields.message_id.freeze(own, checkConsistency);
    }
    this._refObject.message_id = this._wrapperFields.message_id.refObject;
    if (own) {
      this._wrapperFields.position_status.freeze(own, checkConsistency);
    }
    this._refObject.position_status = this._wrapperFields.position_status.refObject;
    if (own) {
      this._wrapperFields.lat_dir.freeze(own, checkConsistency);
    }
    this._refObject.lat_dir = this._wrapperFields.lat_dir.refObject;
    if (own) {
      this._wrapperFields.lon_dir.freeze(own, checkConsistency);
    }
    this._refObject.lon_dir = this._wrapperFields.lon_dir.refObject;
    if (own) {
      this._wrapperFields.date.freeze(own, checkConsistency);
    }
    this._refObject.date = this._wrapperFields.date.refObject;
    if (own) {
      this._wrapperFields.mag_var_direction.freeze(own, checkConsistency);
    }
    this._refObject.mag_var_direction = this._wrapperFields.mag_var_direction.refObject;
    if (own) {
      this._wrapperFields.mode_indicator.freeze(own, checkConsistency);
    }
    this._refObject.mode_indicator = this._wrapperFields.mode_indicator.refObject;
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._wrapperFields.header.copyRefObject(refObject.header);
    this._message_idIntialized = true;
    this._wrapperFields.message_id.data = refObject.message_id.data;
    this._utc_secondsIntialized = true;
    this._refObject.utc_seconds = refObject.utc_seconds;
    this._position_statusIntialized = true;
    this._wrapperFields.position_status.data = refObject.position_status.data;
    this._latIntialized = true;
    this._refObject.lat = refObject.lat;
    this._lonIntialized = true;
    this._refObject.lon = refObject.lon;
    this._lat_dirIntialized = true;
    this._wrapperFields.lat_dir.data = refObject.lat_dir.data;
    this._lon_dirIntialized = true;
    this._wrapperFields.lon_dir.data = refObject.lon_dir.data;
    this._speedIntialized = true;
    this._refObject.speed = refObject.speed;
    this._trackIntialized = true;
    this._refObject.track = refObject.track;
    this._dateIntialized = true;
    this._wrapperFields.date.data = refObject.date.data;
    this._mag_varIntialized = true;
    this._refObject.mag_var = refObject.mag_var;
    this._mag_var_directionIntialized = true;
    this._wrapperFields.mag_var_direction.data = refObject.mag_var_direction.data;
    this._mode_indicatorIntialized = true;
    this._wrapperFields.mode_indicator.data = refObject.mode_indicator.data;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
    HeaderWrapper.freeStruct(refObject.header);
    StringWrapper.freeStruct(refObject.message_id);
    StringWrapper.freeStruct(refObject.position_status);
    StringWrapper.freeStruct(refObject.lat_dir);
    StringWrapper.freeStruct(refObject.lon_dir);
    StringWrapper.freeStruct(refObject.date);
    StringWrapper.freeStruct(refObject.mag_var_direction);
    StringWrapper.freeStruct(refObject.mode_indicator);
  }
  static destoryRawROS(msg) {
    GprmcWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'nmea_msgs', subFolder: 'msg', interfaceName: 'Gprmc'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get header() {
    return this._wrapperFields.header;
  }
  set header(value) {
    if (value instanceof HeaderWrapper) {
      this._wrapperFields.header.copy(value);
    } else {
      this._wrapperFields.header.copy(new HeaderWrapper(value));
    }
  }
  get message_id() {
    if (!this._message_idIntialized) {
      return undefined;
    }
    return this._wrapperFields.message_id.data;
  }
  set message_id(value) {
    this._message_idIntialized = true;
    this._wrapperFields.message_id.data = value;
  }
  get utc_seconds() {
    if (!this._utc_secondsIntialized) {
      return undefined;
    }
    return this._refObject.utc_seconds;
  }
  set utc_seconds(value) {
    this._utc_secondsIntialized = true;
    this._refObject.utc_seconds = value;
  }
  get position_status() {
    if (!this._position_statusIntialized) {
      return undefined;
    }
    return this._wrapperFields.position_status.data;
  }
  set position_status(value) {
    this._position_statusIntialized = true;
    this._wrapperFields.position_status.data = value;
  }
  get lat() {
    if (!this._latIntialized) {
      return undefined;
    }
    return this._refObject.lat;
  }
  set lat(value) {
    this._latIntialized = true;
    this._refObject.lat = value;
  }
  get lon() {
    if (!this._lonIntialized) {
      return undefined;
    }
    return this._refObject.lon;
  }
  set lon(value) {
    this._lonIntialized = true;
    this._refObject.lon = value;
  }
  get lat_dir() {
    if (!this._lat_dirIntialized) {
      return undefined;
    }
    return this._wrapperFields.lat_dir.data;
  }
  set lat_dir(value) {
    this._lat_dirIntialized = true;
    this._wrapperFields.lat_dir.data = value;
  }
  get lon_dir() {
    if (!this._lon_dirIntialized) {
      return undefined;
    }
    return this._wrapperFields.lon_dir.data;
  }
  set lon_dir(value) {
    this._lon_dirIntialized = true;
    this._wrapperFields.lon_dir.data = value;
  }
  get speed() {
    if (!this._speedIntialized) {
      return undefined;
    }
    return this._refObject.speed;
  }
  set speed(value) {
    this._speedIntialized = true;
    this._refObject.speed = value;
  }
  get track() {
    if (!this._trackIntialized) {
      return undefined;
    }
    return this._refObject.track;
  }
  set track(value) {
    this._trackIntialized = true;
    this._refObject.track = value;
  }
  get date() {
    if (!this._dateIntialized) {
      return undefined;
    }
    return this._wrapperFields.date.data;
  }
  set date(value) {
    this._dateIntialized = true;
    this._wrapperFields.date.data = value;
  }
  get mag_var() {
    if (!this._mag_varIntialized) {
      return undefined;
    }
    return this._refObject.mag_var;
  }
  set mag_var(value) {
    this._mag_varIntialized = true;
    this._refObject.mag_var = value;
  }
  get mag_var_direction() {
    if (!this._mag_var_directionIntialized) {
      return undefined;
    }
    return this._wrapperFields.mag_var_direction.data;
  }
  set mag_var_direction(value) {
    this._mag_var_directionIntialized = true;
    this._wrapperFields.mag_var_direction.data = value;
  }
  get mode_indicator() {
    if (!this._mode_indicatorIntialized) {
      return undefined;
    }
    return this._wrapperFields.mode_indicator.data;
  }
  set mode_indicator(value) {
    this._mode_indicatorIntialized = true;
    this._wrapperFields.mode_indicator.data = value;
  }
  copyRefObject(refObject) {
    this._refObject = new GprmcRefStruct(refObject.toObject());
    this._wrapperFields.header.copyRefObject(this._refObject.header);
    this._message_idIntialized = true;
    this._wrapperFields.message_id.copyRefObject(this._refObject.message_id);
    this._utc_secondsIntialized = true;
    this._position_statusIntialized = true;
    this._wrapperFields.position_status.copyRefObject(this._refObject.position_status);
    this._latIntialized = true;
    this._lonIntialized = true;
    this._lat_dirIntialized = true;
    this._wrapperFields.lat_dir.copyRefObject(this._refObject.lat_dir);
    this._lon_dirIntialized = true;
    this._wrapperFields.lon_dir.copyRefObject(this._refObject.lon_dir);
    this._speedIntialized = true;
    this._trackIntialized = true;
    this._dateIntialized = true;
    this._wrapperFields.date.copyRefObject(this._refObject.date);
    this._mag_varIntialized = true;
    this._mag_var_directionIntialized = true;
    this._wrapperFields.mag_var_direction.copyRefObject(this._refObject.mag_var_direction);
    this._mode_indicatorIntialized = true;
    this._wrapperFields.mode_indicator.copyRefObject(this._refObject.mode_indicator);
  }
  copy(other) {
    this._refObject = new GprmcRefStruct(other._refObject.toObject());
    this._wrapperFields.header.copy(other._wrapperFields.header);
    this._message_idIntialized = true;
    this._wrapperFields.message_id.copy(other._wrapperFields.message_id);
    this._utc_secondsIntialized = true;
    this._position_statusIntialized = true;
    this._wrapperFields.position_status.copy(other._wrapperFields.position_status);
    this._latIntialized = true;
    this._lonIntialized = true;
    this._lat_dirIntialized = true;
    this._wrapperFields.lat_dir.copy(other._wrapperFields.lat_dir);
    this._lon_dirIntialized = true;
    this._wrapperFields.lon_dir.copy(other._wrapperFields.lon_dir);
    this._speedIntialized = true;
    this._trackIntialized = true;
    this._dateIntialized = true;
    this._wrapperFields.date.copy(other._wrapperFields.date);
    this._mag_varIntialized = true;
    this._mag_var_directionIntialized = true;
    this._wrapperFields.mag_var_direction.copy(other._wrapperFields.mag_var_direction);
    this._mode_indicatorIntialized = true;
    this._wrapperFields.mode_indicator.copy(other._wrapperFields.mode_indicator);
  }
  static get classType() {
    return GprmcWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[],"fields":[{"name":"header","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"std_msgs","type":"Header","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"message_id","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"string","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"utc_seconds","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"position_status","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"string","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"lat","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"lon","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"lat_dir","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"string","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"lon_dir","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"string","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"speed","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"track","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"date","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"string","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"mag_var","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"mag_var_direction","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"string","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"mode_indicator","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"string","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"nmea_msgs","type":"Gprmc","stringUpperBound":null,"isPrimitiveType":false},"msgName":"Gprmc"};
  }
  hasMember(name) {
    let memberNames = ["header","message_id","utc_seconds","position_status","lat","lon","lat_dir","lon_dir","speed","track","date","mag_var","mag_var_direction","mode_indicator"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class GprmcArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof GprmcWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new GprmcWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to GprmcArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to GprmcArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new GprmcRefArray(size);
    this._refObject = new GprmcRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new GprmcWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof GprmcArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "GprmcArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      GprmcWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return GprmcWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return GprmcArrayWrapper;
  }
}
module.exports = GprmcWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [],
  "fields": [
    {
      "name": "header",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "std_msgs",
        "type": "Header",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "message_id",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "string",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "utc_seconds",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "position_status",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "string",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "lat",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "lon",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "lat_dir",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "string",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "lon_dir",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "string",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "speed",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "track",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "date",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "string",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "mag_var",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "mag_var_direction",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "string",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "mode_indicator",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "string",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "nmea_msgs",
    "type": "Gprmc",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "Gprmc"
}
*/
