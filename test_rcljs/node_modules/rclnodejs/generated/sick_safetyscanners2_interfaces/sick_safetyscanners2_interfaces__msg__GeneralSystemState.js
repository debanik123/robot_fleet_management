// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const BoolWrapper = require('../../generated/std_msgs/std_msgs__msg__Bool.js');
const GeneralSystemStateRefStruct = StructType({
  run_mode_active: primitiveTypes.bool,
  standby_mode_active: primitiveTypes.bool,
  contamination_warning: primitiveTypes.bool,
  contamination_error: primitiveTypes.bool,
  reference_contour_status: primitiveTypes.bool,
  manipulation_status: primitiveTypes.bool,
  safe_cut_off_path: BoolWrapper.refObjectArrayType,
  non_safe_cut_off_path: BoolWrapper.refObjectArrayType,
  reset_required_cut_off_path: BoolWrapper.refObjectArrayType,
  current_monitoring_case_no_table_1: primitiveTypes.uint8,
  current_monitoring_case_no_table_2: primitiveTypes.uint8,
  current_monitoring_case_no_table_3: primitiveTypes.uint8,
  current_monitoring_case_no_table_4: primitiveTypes.uint8,
  application_error: primitiveTypes.bool,
  device_error: primitiveTypes.bool,
});
const GeneralSystemStateRefArray = ArrayType(GeneralSystemStateRefStruct);
const GeneralSystemStateRefStructArray = StructType({
  data: GeneralSystemStateRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class GeneralSystemStateWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    this._safe_cut_off_pathArray = [];
    this._non_safe_cut_off_pathArray = [];
    this._reset_required_cut_off_pathArray = [];
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new GeneralSystemStateRefStruct(other._refObject.toObject());
      this._run_mode_activeIntialized = true;
      this._standby_mode_activeIntialized = true;
      this._contamination_warningIntialized = true;
      this._contamination_errorIntialized = true;
      this._reference_contour_statusIntialized = true;
      this._manipulation_statusIntialized = true;
      this._wrapperFields.safe_cut_off_path = BoolWrapper.createArray();
      this._wrapperFields.safe_cut_off_path.copy(other._wrapperFields.safe_cut_off_path);
      this.safe_cut_off_path = other.safe_cut_off_path;
      this._wrapperFields.non_safe_cut_off_path = BoolWrapper.createArray();
      this._wrapperFields.non_safe_cut_off_path.copy(other._wrapperFields.non_safe_cut_off_path);
      this.non_safe_cut_off_path = other.non_safe_cut_off_path;
      this._wrapperFields.reset_required_cut_off_path = BoolWrapper.createArray();
      this._wrapperFields.reset_required_cut_off_path.copy(other._wrapperFields.reset_required_cut_off_path);
      this.reset_required_cut_off_path = other.reset_required_cut_off_path;
      this._current_monitoring_case_no_table_1Intialized = true;
      this._current_monitoring_case_no_table_2Intialized = true;
      this._current_monitoring_case_no_table_3Intialized = true;
      this._current_monitoring_case_no_table_4Intialized = true;
      this._application_errorIntialized = true;
      this._device_errorIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new GeneralSystemStateRefStruct();
    this._run_mode_activeIntialized = false;
    this._standby_mode_activeIntialized = false;
    this._contamination_warningIntialized = false;
    this._contamination_errorIntialized = false;
    this._reference_contour_statusIntialized = false;
    this._manipulation_statusIntialized = false;
    this._wrapperFields.safe_cut_off_path = BoolWrapper.createArray();
    this._wrapperFields.non_safe_cut_off_path = BoolWrapper.createArray();
    this._wrapperFields.reset_required_cut_off_path = BoolWrapper.createArray();
    this._current_monitoring_case_no_table_1Intialized = false;
    this._current_monitoring_case_no_table_2Intialized = false;
    this._current_monitoring_case_no_table_3Intialized = false;
    this._current_monitoring_case_no_table_4Intialized = false;
    this._application_errorIntialized = false;
    this._device_errorIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new GeneralSystemStateWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new GeneralSystemStateArrayWrapper;
  }
  static get ArrayType() {
    return GeneralSystemStateArrayWrapper;
  }
  static get refObjectArrayType() {
    return GeneralSystemStateRefStructArray
  }
  static get refObjectType() {
    return GeneralSystemStateRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._run_mode_activeIntialized) {
        throw new TypeError('Invalid argument: run_mode_active in GeneralSystemState');
      }
      if (checkConsistency && !this._standby_mode_activeIntialized) {
        throw new TypeError('Invalid argument: standby_mode_active in GeneralSystemState');
      }
      if (checkConsistency && !this._contamination_warningIntialized) {
        throw new TypeError('Invalid argument: contamination_warning in GeneralSystemState');
      }
      if (checkConsistency && !this._contamination_errorIntialized) {
        throw new TypeError('Invalid argument: contamination_error in GeneralSystemState');
      }
      if (checkConsistency && !this._reference_contour_statusIntialized) {
        throw new TypeError('Invalid argument: reference_contour_status in GeneralSystemState');
      }
      if (checkConsistency && !this._manipulation_statusIntialized) {
        throw new TypeError('Invalid argument: manipulation_status in GeneralSystemState');
      }
      if (checkConsistency && !this._current_monitoring_case_no_table_1Intialized) {
        throw new TypeError('Invalid argument: current_monitoring_case_no_table_1 in GeneralSystemState');
      }
      if (checkConsistency && !this._current_monitoring_case_no_table_2Intialized) {
        throw new TypeError('Invalid argument: current_monitoring_case_no_table_2 in GeneralSystemState');
      }
      if (checkConsistency && !this._current_monitoring_case_no_table_3Intialized) {
        throw new TypeError('Invalid argument: current_monitoring_case_no_table_3 in GeneralSystemState');
      }
      if (checkConsistency && !this._current_monitoring_case_no_table_4Intialized) {
        throw new TypeError('Invalid argument: current_monitoring_case_no_table_4 in GeneralSystemState');
      }
      if (checkConsistency && !this._application_errorIntialized) {
        throw new TypeError('Invalid argument: application_error in GeneralSystemState');
      }
      if (checkConsistency && !this._device_errorIntialized) {
        throw new TypeError('Invalid argument: device_error in GeneralSystemState');
      }
    if (!own) {
      this._wrapperFields.safe_cut_off_path.fill(this._safe_cut_off_pathArray);
      this._wrapperFields.safe_cut_off_path.freeze(own, checkConsistency);
      this._refObject.safe_cut_off_path = this._wrapperFields.safe_cut_off_path.refObject;
    } else {
      this._wrapperFields.safe_cut_off_path.fill([]);
      this._wrapperFields.safe_cut_off_path.freeze(own, checkConsistency);
      this._refObject.safe_cut_off_path = this._wrapperFields.safe_cut_off_path.refObject;
    }
    if (!own) {
      this._wrapperFields.non_safe_cut_off_path.fill(this._non_safe_cut_off_pathArray);
      this._wrapperFields.non_safe_cut_off_path.freeze(own, checkConsistency);
      this._refObject.non_safe_cut_off_path = this._wrapperFields.non_safe_cut_off_path.refObject;
    } else {
      this._wrapperFields.non_safe_cut_off_path.fill([]);
      this._wrapperFields.non_safe_cut_off_path.freeze(own, checkConsistency);
      this._refObject.non_safe_cut_off_path = this._wrapperFields.non_safe_cut_off_path.refObject;
    }
    if (!own) {
      this._wrapperFields.reset_required_cut_off_path.fill(this._reset_required_cut_off_pathArray);
      this._wrapperFields.reset_required_cut_off_path.freeze(own, checkConsistency);
      this._refObject.reset_required_cut_off_path = this._wrapperFields.reset_required_cut_off_path.refObject;
    } else {
      this._wrapperFields.reset_required_cut_off_path.fill([]);
      this._wrapperFields.reset_required_cut_off_path.freeze(own, checkConsistency);
      this._refObject.reset_required_cut_off_path = this._wrapperFields.reset_required_cut_off_path.refObject;
    }
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._run_mode_activeIntialized = true;
    this._refObject.run_mode_active = refObject.run_mode_active;
    this._standby_mode_activeIntialized = true;
    this._refObject.standby_mode_active = refObject.standby_mode_active;
    this._contamination_warningIntialized = true;
    this._refObject.contamination_warning = refObject.contamination_warning;
    this._contamination_errorIntialized = true;
    this._refObject.contamination_error = refObject.contamination_error;
    this._reference_contour_statusIntialized = true;
    this._refObject.reference_contour_status = refObject.reference_contour_status;
    this._manipulation_statusIntialized = true;
    this._refObject.manipulation_status = refObject.manipulation_status;
    refObject.safe_cut_off_path.data.length = refObject.safe_cut_off_path.size;
    for (let index = 0; index < refObject.safe_cut_off_path.size; index++) {
      this._safe_cut_off_pathArray[index] = refObject.safe_cut_off_path.data[index].data;
    }
    refObject.non_safe_cut_off_path.data.length = refObject.non_safe_cut_off_path.size;
    for (let index = 0; index < refObject.non_safe_cut_off_path.size; index++) {
      this._non_safe_cut_off_pathArray[index] = refObject.non_safe_cut_off_path.data[index].data;
    }
    refObject.reset_required_cut_off_path.data.length = refObject.reset_required_cut_off_path.size;
    for (let index = 0; index < refObject.reset_required_cut_off_path.size; index++) {
      this._reset_required_cut_off_pathArray[index] = refObject.reset_required_cut_off_path.data[index].data;
    }
    this._current_monitoring_case_no_table_1Intialized = true;
    this._refObject.current_monitoring_case_no_table_1 = refObject.current_monitoring_case_no_table_1;
    this._current_monitoring_case_no_table_2Intialized = true;
    this._refObject.current_monitoring_case_no_table_2 = refObject.current_monitoring_case_no_table_2;
    this._current_monitoring_case_no_table_3Intialized = true;
    this._refObject.current_monitoring_case_no_table_3 = refObject.current_monitoring_case_no_table_3;
    this._current_monitoring_case_no_table_4Intialized = true;
    this._refObject.current_monitoring_case_no_table_4 = refObject.current_monitoring_case_no_table_4;
    this._application_errorIntialized = true;
    this._refObject.application_error = refObject.application_error;
    this._device_errorIntialized = true;
    this._refObject.device_error = refObject.device_error;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
    if (refObject.safe_cut_off_path.size != 0) {
      BoolWrapper.ArrayType.freeArray(refObject.safe_cut_off_path);
      if (BoolWrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.safe_cut_off_path, BoolWrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.non_safe_cut_off_path.size != 0) {
      BoolWrapper.ArrayType.freeArray(refObject.non_safe_cut_off_path);
      if (BoolWrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.non_safe_cut_off_path, BoolWrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.reset_required_cut_off_path.size != 0) {
      BoolWrapper.ArrayType.freeArray(refObject.reset_required_cut_off_path);
      if (BoolWrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.reset_required_cut_off_path, BoolWrapper.refObjectArrayType, 'data');
      }
    }
  }
  static destoryRawROS(msg) {
    GeneralSystemStateWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'sick_safetyscanners2_interfaces', subFolder: 'msg', interfaceName: 'GeneralSystemState'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get run_mode_active() {
    if (!this._run_mode_activeIntialized) {
      return undefined;
    }
    return this._refObject.run_mode_active;
  }
  set run_mode_active(value) {
    this._run_mode_activeIntialized = true;
    this._refObject.run_mode_active = value;
  }
  get standby_mode_active() {
    if (!this._standby_mode_activeIntialized) {
      return undefined;
    }
    return this._refObject.standby_mode_active;
  }
  set standby_mode_active(value) {
    this._standby_mode_activeIntialized = true;
    this._refObject.standby_mode_active = value;
  }
  get contamination_warning() {
    if (!this._contamination_warningIntialized) {
      return undefined;
    }
    return this._refObject.contamination_warning;
  }
  set contamination_warning(value) {
    this._contamination_warningIntialized = true;
    this._refObject.contamination_warning = value;
  }
  get contamination_error() {
    if (!this._contamination_errorIntialized) {
      return undefined;
    }
    return this._refObject.contamination_error;
  }
  set contamination_error(value) {
    this._contamination_errorIntialized = true;
    this._refObject.contamination_error = value;
  }
  get reference_contour_status() {
    if (!this._reference_contour_statusIntialized) {
      return undefined;
    }
    return this._refObject.reference_contour_status;
  }
  set reference_contour_status(value) {
    this._reference_contour_statusIntialized = true;
    this._refObject.reference_contour_status = value;
  }
  get manipulation_status() {
    if (!this._manipulation_statusIntialized) {
      return undefined;
    }
    return this._refObject.manipulation_status;
  }
  set manipulation_status(value) {
    this._manipulation_statusIntialized = true;
    this._refObject.manipulation_status = value;
  }
  get safe_cut_off_path() {
    return this._safe_cut_off_pathArray;
  }
  set safe_cut_off_path(value) {
    this._safe_cut_off_pathArray = value;
  }
  get non_safe_cut_off_path() {
    return this._non_safe_cut_off_pathArray;
  }
  set non_safe_cut_off_path(value) {
    this._non_safe_cut_off_pathArray = value;
  }
  get reset_required_cut_off_path() {
    return this._reset_required_cut_off_pathArray;
  }
  set reset_required_cut_off_path(value) {
    this._reset_required_cut_off_pathArray = value;
  }
  get current_monitoring_case_no_table_1() {
    if (!this._current_monitoring_case_no_table_1Intialized) {
      return undefined;
    }
    return this._refObject.current_monitoring_case_no_table_1;
  }
  set current_monitoring_case_no_table_1(value) {
    this._current_monitoring_case_no_table_1Intialized = true;
    this._refObject.current_monitoring_case_no_table_1 = value;
  }
  get current_monitoring_case_no_table_2() {
    if (!this._current_monitoring_case_no_table_2Intialized) {
      return undefined;
    }
    return this._refObject.current_monitoring_case_no_table_2;
  }
  set current_monitoring_case_no_table_2(value) {
    this._current_monitoring_case_no_table_2Intialized = true;
    this._refObject.current_monitoring_case_no_table_2 = value;
  }
  get current_monitoring_case_no_table_3() {
    if (!this._current_monitoring_case_no_table_3Intialized) {
      return undefined;
    }
    return this._refObject.current_monitoring_case_no_table_3;
  }
  set current_monitoring_case_no_table_3(value) {
    this._current_monitoring_case_no_table_3Intialized = true;
    this._refObject.current_monitoring_case_no_table_3 = value;
  }
  get current_monitoring_case_no_table_4() {
    if (!this._current_monitoring_case_no_table_4Intialized) {
      return undefined;
    }
    return this._refObject.current_monitoring_case_no_table_4;
  }
  set current_monitoring_case_no_table_4(value) {
    this._current_monitoring_case_no_table_4Intialized = true;
    this._refObject.current_monitoring_case_no_table_4 = value;
  }
  get application_error() {
    if (!this._application_errorIntialized) {
      return undefined;
    }
    return this._refObject.application_error;
  }
  set application_error(value) {
    this._application_errorIntialized = true;
    this._refObject.application_error = value;
  }
  get device_error() {
    if (!this._device_errorIntialized) {
      return undefined;
    }
    return this._refObject.device_error;
  }
  set device_error(value) {
    this._device_errorIntialized = true;
    this._refObject.device_error = value;
  }
  copyRefObject(refObject) {
    this._refObject = new GeneralSystemStateRefStruct(refObject.toObject());
    this._run_mode_activeIntialized = true;
    this._standby_mode_activeIntialized = true;
    this._contamination_warningIntialized = true;
    this._contamination_errorIntialized = true;
    this._reference_contour_statusIntialized = true;
    this._manipulation_statusIntialized = true;
    refObject.safe_cut_off_path.data.length = refObject.safe_cut_off_path.size;
    for (let index = 0; index < refObject.safe_cut_off_path.size; index++) {
      this._safe_cut_off_pathArray[index] = refObject.safe_cut_off_path.data[index].data;
    }
    refObject.non_safe_cut_off_path.data.length = refObject.non_safe_cut_off_path.size;
    for (let index = 0; index < refObject.non_safe_cut_off_path.size; index++) {
      this._non_safe_cut_off_pathArray[index] = refObject.non_safe_cut_off_path.data[index].data;
    }
    refObject.reset_required_cut_off_path.data.length = refObject.reset_required_cut_off_path.size;
    for (let index = 0; index < refObject.reset_required_cut_off_path.size; index++) {
      this._reset_required_cut_off_pathArray[index] = refObject.reset_required_cut_off_path.data[index].data;
    }
    this._current_monitoring_case_no_table_1Intialized = true;
    this._current_monitoring_case_no_table_2Intialized = true;
    this._current_monitoring_case_no_table_3Intialized = true;
    this._current_monitoring_case_no_table_4Intialized = true;
    this._application_errorIntialized = true;
    this._device_errorIntialized = true;
  }
  copy(other) {
    this._refObject = new GeneralSystemStateRefStruct(other._refObject.toObject());
    this._run_mode_activeIntialized = true;
    this._standby_mode_activeIntialized = true;
    this._contamination_warningIntialized = true;
    this._contamination_errorIntialized = true;
    this._reference_contour_statusIntialized = true;
    this._manipulation_statusIntialized = true;
    this._safe_cut_off_pathArray = other._safe_cut_off_pathArray.slice();
    this._non_safe_cut_off_pathArray = other._non_safe_cut_off_pathArray.slice();
    this._reset_required_cut_off_pathArray = other._reset_required_cut_off_pathArray.slice();
    this._current_monitoring_case_no_table_1Intialized = true;
    this._current_monitoring_case_no_table_2Intialized = true;
    this._current_monitoring_case_no_table_3Intialized = true;
    this._current_monitoring_case_no_table_4Intialized = true;
    this._application_errorIntialized = true;
    this._device_errorIntialized = true;
  }
  static get classType() {
    return GeneralSystemStateWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[],"fields":[{"name":"run_mode_active","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"standby_mode_active","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"contamination_warning","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"contamination_error","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"reference_contour_status","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"manipulation_status","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"safe_cut_off_path","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"non_safe_cut_off_path","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"reset_required_cut_off_path","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"current_monitoring_case_no_table_1","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"current_monitoring_case_no_table_2","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"current_monitoring_case_no_table_3","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"current_monitoring_case_no_table_4","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"application_error","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"device_error","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"sick_safetyscanners2_interfaces","type":"GeneralSystemState","stringUpperBound":null,"isPrimitiveType":false},"msgName":"GeneralSystemState"};
  }
  hasMember(name) {
    let memberNames = ["run_mode_active","standby_mode_active","contamination_warning","contamination_error","reference_contour_status","manipulation_status","safe_cut_off_path","non_safe_cut_off_path","reset_required_cut_off_path","current_monitoring_case_no_table_1","current_monitoring_case_no_table_2","current_monitoring_case_no_table_3","current_monitoring_case_no_table_4","application_error","device_error"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class GeneralSystemStateArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof GeneralSystemStateWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new GeneralSystemStateWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to GeneralSystemStateArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to GeneralSystemStateArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new GeneralSystemStateRefArray(size);
    this._refObject = new GeneralSystemStateRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new GeneralSystemStateWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof GeneralSystemStateArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "GeneralSystemStateArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      GeneralSystemStateWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return GeneralSystemStateWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return GeneralSystemStateArrayWrapper;
  }
}
module.exports = GeneralSystemStateWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [],
  "fields": [
    {
      "name": "run_mode_active",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "standby_mode_active",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "contamination_warning",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "contamination_error",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "reference_contour_status",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "manipulation_status",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "safe_cut_off_path",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "non_safe_cut_off_path",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "reset_required_cut_off_path",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "current_monitoring_case_no_table_1",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "current_monitoring_case_no_table_2",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "current_monitoring_case_no_table_3",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "current_monitoring_case_no_table_4",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "application_error",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "device_error",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "sick_safetyscanners2_interfaces",
    "type": "GeneralSystemState",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "GeneralSystemState"
}
*/
